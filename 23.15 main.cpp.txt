#include "Plant.h"
#include "Flower.h"
#include <vector>
#include <string>
#include <iostream>

using namespace std;

// TODO: Define a PrintVector function that prints an vector of plant (or flower) object pointers
void PrintVector(vector<Plant*>a){
   for(auto &element : a){
      element->PrintInfo();
      cout<<endl;
      }
   };


int main(int argc, char* argv[]) {
   // TODO: Declare a vector called myGarden that can hold object of type plant pointer
   vector<Plant*> myGarden;
   // TODO: Declare variables - plantName, plantCost, flowerName, flowerCost,
   //       colorOfFlowers, isAnnual
   string plantName, flowerName,colorOfFlowers;
   int plantCost,flowerCost;
   string isAnnual;
   string input;

   cin >> input;

   while(input != "-1") {
   // TODO: Check if input is a plant or flower
   //       Store as a plant object or flower object
   //       Add to the vector myGarden
   
   if(input=="plant"){
      cin>> plantName;
      cin>> plantCost;
      Plant *z = new Plant;
      z->SetPlantName(plantName);
      z->SetPlantCost(plantCost);
      myGarden.push_back(z);
      }
      
   if(input=="flower"){
      cin>>flowerName;
      cin>>flowerCost;
      cin>>isAnnual;
      cin>>colorOfFlowers;
      Flower *z = new Flower;
      
      z->Plant::SetPlantName(flowerName);
      z->Plant::SetPlantCost(flowerCost);
      z->SetColorOfFlowers(colorOfFlowers);
      if(isAnnual == "true")z->SetPlantType(true);
      else z->SetPlantType(false);
      myGarden.push_back(z);
   
      }
      cin >> input;
   }

   // TODO: Call the method PrintVector to print myGarden
   
   PrintVector(myGarden);
   for (size_t i = 0; i < myGarden.size(); ++i) {
      delete myGarden.at(i);
   }
   
   return 0;
}